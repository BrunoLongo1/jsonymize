#!/usr/bin/env node
var jsonymize = require("../lib/jsonymize");
var fs = require("fs");
var cjson = require("cjson");
var yargs = require("yargs")
    .usage("Anonymize JSON values.\n\nUsage: jsonymize [fields]")
    .options("i", {
      alias: "ignore",
      description: "JSON field to ignore (can be repeated multiple times)"
    })
    .options("e", {
      alias: "extension",
      description: "ChanceJS mixin providing custom generators"
    })
    .options("c", {
      alias: "config",
      description: "Advanced configuration file"
    })
    .options("h", {
      alias: "help",
      description: "Show this help message"
    });

var argv = yargs.argv;

if (argv.help) {
  yargs.showHelp();
  return;
}

if (argv.config && !fs.existsSync(argv.config)) {
  console.error("Configuration file \"" + argv.config + "\" could not be read.");
  return;
}

var config = argv.config ? cjson.load(argv.config) : {};
var generators = argv.generator || config.generators || {};
var extensions = argv.extension || config.extensions || [];
var aliases = argv.alias || config.aliases || {};
var fields = (argv._.length ? argv._ : undefined) || config.fields || [];
var ignore = argv.ignore || config.ignore || [];

process.stdin.resume();
process.stdin.setEncoding("utf8");

jsonymize(process.stdin, {
  fields: (fields.length ? fields : undefined),
  generators: generators,
  aliases: aliases,
  extensions: extensions
}).anonymize().then(function(anonymized) {
  process.stdout.write(anonymized + "\n");
}, function(error) {
  process.stderr.write("Error! " + JSON.stringify(error.thrown) + "\n");
});
